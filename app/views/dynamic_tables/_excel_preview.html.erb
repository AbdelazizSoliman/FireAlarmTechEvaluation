<%= form_with url: handle_excel_actions_path, method: :post, data: { turbo: false }, id: 'excel-preview-form' do %>
  <table class="table-auto border-collapse border w-full text-center mb-4">
    <thead>
      <tr>
        <th>Row</th>
        <th>Cell Value</th>
        <th>Type</th>
        <th>If Child: Parent Table</th>
        <th>If Feature: Target Table</th>
        <th>If Feature: Feature Type</th>
      </tr>
    </thead>
    <tbody>
      <% @grid.each_with_index do |row, i| %>
        <% cell = row[0] %>
        <tr>
          <td><%= i + 1 %></td>
          <td>
            <input
              type="hidden"
              name="rows[<%= i %>][value]"
              value="<%= cell[:value] %>"
            />
            <%= cell[:value] %>
          </td>
          <td>
            <select
              name="rows[<%= i %>][type]"
              class="row-type-select"
              data-row-index="<%= i %>"
            >
              <option value="">â€”</option>
              <option value="main_table">Main Table</option>
              <option value="child_table">Child Table</option>
              <option value="feature">Feature</option>
            </select>
          </td>
          <td>
            <!-- Parent selection for child tables -->
            <select
              name="rows[<%= i %>][parent]"
              class="parent-table-select"
              id="parent-select-<%= i %>"
              disabled
            >
              <option value="">Select Parent</option>
            </select>
          </td>
          <td>
            <!-- Target table selection for features -->
            <select
              name="rows[<%= i %>][target]"
              class="target-table-select"
              id="target-select-<%= i %>"
              disabled
            >
              <option value="">Select Table</option>
            </select>
          </td>
          <td>
            <!-- Feature type: text (None), combobox, or checkbox -->
            <select
              name="rows[<%= i %>][feature_type]"
              class="feature-type-select"
              id="feature-type-<%= i %>"
              disabled
            >
              <option value="text">None</option>
              <option value="combobox">Combobox</option>
              <option value="checkbox">Checkboxes</option>
            </select>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>

  <div class="flex justify-end space-x-2 mt-6">
    <button
      type="submit"
      class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 opacity-100"
    >
      Submit
    </button>
  </div>
<% end %>

<script>
  // Collect available main/child tables as admin chooses them, then fill in parent/target selectors dynamically
  const mainTables = [];
  const childTables = [];

  function updateTableSelectors() {
    mainTables.length = 0;
    childTables.length = 0;

    document.querySelectorAll(".row-type-select").forEach((sel, idx) => {
      const rowType = sel.value;
      const cellValue = document.querySelector(
        `input[name="rows[${idx}][value]"]`
      ).value;
      // Only non-empty cell values should be candidates
      if (rowType === "main_table" && cellValue)
        mainTables.push({ idx, name: cellValue });
      if (rowType === "child_table" && cellValue)
        childTables.push({ idx, name: cellValue });
    });

    document.querySelectorAll(".row-type-select").forEach((sel, idx) => {
      const rowType = sel.value;

      // Child table parent dropdown
      const parentSel = document.getElementById(`parent-select-${idx}`);
      parentSel.innerHTML = '<option value="">Select Parent</option>';
      parentSel.disabled = rowType !== "child_table";
      if (rowType === "child_table" && mainTables.length > 0) {
        mainTables.forEach((tbl) => {
          const opt = document.createElement("option");
          opt.value = tbl.name;
          opt.text = tbl.name;
          parentSel.appendChild(opt);
        });
      }

      // Feature target table dropdown
      const targetSel = document.getElementById(`target-select-${idx}`);
      targetSel.innerHTML = '<option value="">Select Table</option>';
      targetSel.disabled = rowType !== "feature";
      if (
        rowType === "feature" &&
        (mainTables.length > 0 || childTables.length > 0)
      ) {
        mainTables.concat(childTables).forEach((tbl) => {
          const opt = document.createElement("option");
          opt.value = tbl.name;
          opt.text = tbl.name;
          targetSel.appendChild(opt);
        });
      }

      // Feature type dropdown enabled only for features
      const featureTypeSel = document.getElementById(`feature-type-${idx}`);
      featureTypeSel.disabled = rowType !== "feature";
    });
  }

  document.querySelectorAll(".row-type-select").forEach((sel) => {
    sel.addEventListener("change", updateTableSelectors);
  });

  document.addEventListener("DOMContentLoaded", updateTableSelectors);
</script>
