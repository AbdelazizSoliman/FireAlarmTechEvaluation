<!-- Replace the existing "Add Column to <%= @table_name.humanize %>" section -->
<% if @table_name.present? %>
  <div class="mt-6 border-t border-gray-200 pt-6">
    <h3 class="text-lg font-semibold text-gray-700 mb-4">Add Column to <%= @table_name.humanize %></h3>
    <form action="/admin/add_column" method="post" id="add-column-form" class="space-y-6">
      <input type="hidden" name="table_name" value="<%= @table_name %>">
      
      <!-- Column Name -->
      <div>
        <label for="column_name" class="block text-sm font-medium text-gray-700">Column Name <span class="text-gray-500">(e.g., category)</span></label>
        <input type="text" id="column_name" name="column_name" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
      </div>

      <!-- Column Type -->
      <div>
        <label for="column_type" class="block text-sm font-medium text-gray-700">Column Type</label>
        <select id="column_type" name="column_type" onchange="toggleArrayOption(this)" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
          <option value="string">String</option>
          <option value="integer">Integer</option>
          <option value="boolean">Boolean</option>
          <option value="decimal">Decimal</option>
          <option value="text">Text</option>
          <option value="text[]">Text Array</option>
          <option value="date">Date</option>
        </select>
      </div>
      <div id="array-options" class="hidden mt-2">
        <input type="checkbox" name="array_default_empty" id="array_default_empty" value="1" checked class="mr-2">
        <label for="array_default_empty" class="text-sm text-gray-600">Default to empty array ([])</label>
      </div>

      <!-- Front-end Feature -->
      <div>
        <label for="feature" class="block text-sm font-medium text-gray-700">Front-end Feature <span class="text-gray-500">(optional)</span></label>
        <select id="feature" name="feature" onchange="toggleFeatureOptions(this)" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
          <option value="">None</option>
          <option value="combobox">Combobox</option>
          <option value="checkboxes">Checkboxes</option>
        </select>
      </div>

      <!-- Combobox/Checkbox Options (Dynamic) -->
      <div id="feature-options" class="hidden space-y-4">
        <!-- Values Input -->
        <div>
          <label for="combobox_values" class="block text-sm font-medium text-gray-700">Values (comma-separated, e.g., A, B, C)</label>
          <input type="text" id="combobox_values" name="combobox_values" placeholder="e.g., A, B, C" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
        </div>

        <!-- Sub-Combobox Option -->
        <div id="sub-combobox-section" class="hidden">
          <div class="flex items-center">
            <input type="checkbox" id="has_sub_options" name="has_sub_options" onchange="toggleSubOptions(this)" class="mr-2">
            <label for="has_sub_options" class="text-sm font-medium text-gray-700">Is this a parent combobox with sub-options?</label>
          </div>
          <div id="sub-options-container" class="hidden mt-2 space-y-4">
            <div>
              <label for="parent_value" class="block text-sm font-medium text-gray-700">Select Parent Value</label>
              <select id="parent_value" name="parent_value" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                <option value="">-- Select a Value --</option>
              </select>
            </div>
            <div>
              <label for="sub_options" class="block text-sm font-medium text-gray-700">Sub-options (comma-separated, e.g., Phone, Laptop)</label>
              <input type="text" id="sub_options" name="sub_options" placeholder="e.g., Phone, Laptop" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
            </div>
            <div>
              <label for="sub_field" class="block text-sm font-medium text-gray-700">Sub-field Name (e.g., sub_category)</label>
              <input type="text" id="sub_field" name="sub_field" placeholder="e.g., sub_category" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
            </div>
          </div>
        </div>
      </div>

      <!-- Cost Options (Dynamic) -->
      <div id="cost-options" class="hidden">
        <div class="flex items-center">
          <input type="checkbox" id="has_cost" name="has_cost" onchange="toggleCostFields(this)" class="mr-2">
          <label for="has_cost" class="text-sm font-medium text-gray-700">Has Cost?</label>
        </div>
        <div id="cost-fields" class="hidden mt-2 space-y-4">
          <div>
            <label for="rate_key" class="block text-sm font-medium text-gray-700">Rate Key (e.g., total_no_of_panels_unit_rate)</label>
            <input type="text" id="rate_key" name="rate_key" placeholder="e.g., total_no_of_panels_unit_rate" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
          </div>
          <div>
            <label for="amount_key" class="block text-sm font-medium text-gray-700">Amount Key (e.g., total_no_of_panels_amount)</label>
            <input type="text" id="amount_key" name="amount_key" placeholder="e.g., total_no_of_panels_amount" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
          </div>
          <div>
            <label for="notes_key" class="block text-sm font-medium text-gray-700">Notes Key (e.g., total_no_of_panels_notes)</label>
            <input type="text" id="notes_key" name="notes_key" placeholder="e.g., total_no_of_panels_notes" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
          </div>
        </div>
      </div>

      <button type="submit" class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 transition duration-150 ease-in-out">Add Column</button>
    </form>
  </div>
<% end %>

<!-- JavaScript at the bottom -->
<script>
  function toggleSection(sectionId) {
    const section = document.getElementById(sectionId);
    section.classList.toggle('hidden');
  }

  function toggleArrayOption(select) {
    const arrayOptions = select.closest('.column-row')?.querySelector('#array-options') || document.getElementById('array-options');
    arrayOptions.classList.toggle('hidden', select.value !== 'text[]');
  }

  function toggleFeatureOptions(select) {
    const featureOptions = document.getElementById('feature-options');
    const costOptions = document.getElementById('cost-options');
    const shouldShow = select.value === 'combobox' || select.value === 'checkboxes';
    featureOptions.classList.toggle('hidden', !shouldShow);
    costOptions.classList.toggle('hidden', !shouldShow); // Show cost options for both combobox and checkboxes
  }

  function toggleSubOptions(checkbox) {
    const subOptionsContainer = document.getElementById('sub-options-container');
    subOptionsContainer.classList.toggle('hidden', !checkbox.checked);

    if (checkbox.checked) {
      const comboboxValues = document.getElementById('combobox_values').value.split(',').map(v => v.trim()).filter(v => v);
      const parentSelect = document.getElementById('parent_value');
      parentSelect.innerHTML = '<option value="">-- Select a Value --</option>';
      comboboxValues.forEach(value => {
        const option = document.createElement('option');
        option.value = value;
        option.textContent = value;
        parentSelect.appendChild(option);
      });
    }
  }

  function toggleCostFields(checkbox) {
    const costFields = document.getElementById('cost-fields');
    costFields.classList.toggle('hidden', !checkbox.checked);
  }

  document.getElementById('add-column').addEventListener('click', function() {
    const container = document.getElementById('columns-container');
    const newRow = document.createElement('div');
    newRow.className = 'column-row flex gap-4 mb-2 items-center';
    newRow.innerHTML = `
      <input type="text" name="columns[][name]" placeholder="Column Name" required class="w-1/3 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
      <select name="columns[][type]" onchange="toggleArrayOption(this)" required class="w-1/3 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
        <option value="string">String</option>
        <option value="integer">Integer</option>
        <option value="boolean">Boolean</option>
        <option value="decimal">Decimal</option>
        <option value="text">Text</option>
        <option value="text[]">Text Array</option>
        <option value="date">Date</option>
      </select>
      <div id="array-options" class="w-1/3 hidden">
        <input type="checkbox" name="columns[][array_default_empty]" value="1" checked class="mr-2">
        <label class="text-sm text-gray-600">Default []</label>
      </div>
    `;
    container.appendChild(newRow);
  });

  document.addEventListener('DOMContentLoaded', function() {
    <% if params[:subsystem_filter].present? || @table_name.present? %>
      document.getElementById('manage-tables-form').classList.remove('hidden');
    <% end %>
  });
</script>