<%= form_with(model: supplier, local: true, class: "space-y-8") do |form| %>
  <% if supplier.errors.any? %>
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative">
      <h2 class="font-bold mb-2"><%= pluralize(supplier.errors.count, "error") %> prohibited this supplier from being saved:</h2>
      <ul class="list-disc list-inside">
        <% supplier.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="bg-white p-8 rounded-lg shadow-md">
    <h2 class="text-xl font-bold text-red-700 mb-4">Supplier Information</h2>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- General Information fields -->
      <div class="relative">
        <%= form.text_field :supplier_name, placeholder: "Enter supplier name", class: input_class %>
        <%= form.label :supplier_name, "Supplier Name", class: label_class %>
      </div>

      <div class="relative">
        <%= form.text_field :supplier_category, placeholder: "Enter category", class: input_class %>
        <%= form.label :supplier_category, "Supplier Category", class: label_class %>
      </div>

      <div class="relative">
        <%= form.number_field :total_years_in_saudi_market, placeholder: "Enter years", class: input_class %>
        <%= form.label :total_years_in_saudi_market, "Years in Saudi Market", class: label_class %>
      </div>

      <div class="relative" data-controller="phone-format">
        <%= form.text_field :phone, placeholder: "Enter phone number", class: "#{input_class} phone-input", data: { target: "phone-format.input" } %>
        <%= form.label :phone, "Phone", class: label_class %>
      </div>

      <div class="relative">
        <%= form.email_field :supplier_email, placeholder: "Enter email", class: input_class %>
        <%= form.label :supplier_email, "Email", class: label_class %>
      </div>

      <!-- Password fields -->
      <div class="relative">
        <%= form.password_field :password, placeholder: "Enter password", class: input_class %>
        <%= form.label :password, "Password", class: label_class %>
      </div>

      <div class="relative">
        <%= form.password_field :password_confirmation, placeholder: "Confirm password", class: input_class %>
        <%= form.label :password_confirmation, "Confirm Password", class: label_class %>
      </div>

      <!-- Status Field -->
      <div class="relative">
        <%= form.select :status, Supplier::STATUSES.map { |s| [s.capitalize, s] }, {}, class: input_class %>
        <%= form.label :status, "Status", class: label_class %>
      </div>

      <!-- Membership Type Field -->
      <div class="relative">
        <%= form.select :membership_type, ["gold", "silver"], { selected: supplier.membership_type }, class: input_class %>
        <%= form.label :membership_type, "Membership Type", class: label_class %>
      </div>

      <!-- Receive Evaluation Report Field -->
      <div class="relative">
        <%= form.label :receive_evaluation_report, "Receive Evaluation Report?", class: label_class %>
        <div class="mt-2">
          <%= form.radio_button :receive_evaluation_report, true, checked: supplier.receive_evaluation_report == true, class: "mr-2" %>
          <%= form.label :receive_evaluation_report_true, "Yes", class: "mr-4" %>
          <%= form.radio_button :receive_evaluation_report, false, checked: supplier.receive_evaluation_report == false, class: "mr-2" %>
          <%= form.label :receive_evaluation_report_false, "No" %>
        </div>
      </div>
    </div>
  </div>

  <div class="px-6 py-4 border-t border-gray-200 flex justify-end">
    <%= link_to "Cancel", supplier.persisted? ? supplier_path(supplier) : suppliers_path, data: { turbo_frame: "_top" }, class: "bg-white text-red-600 py-2 px-4 rounded border border-red-600 mr-2" %>
    <%= form.submit "Save", class: "bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded cursor-pointer" %>
  </div>
<% end %>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const membershipTypeSelect = document.getElementById("supplier_membership_type");
    const goldSection = document.getElementById("gold-options");
    const silverSection = document.getElementById("silver-options");

    function toggleMembershipSections() {
      if (membershipTypeSelect.value === "gold") {
        goldSection.style.display = "block";
        silverSection.style.display = "none";
      } else if (membershipTypeSelect.value === "silver") {
        silverSection.style.display = "block";
        goldSection.style.display = "none";
      } else {
        goldSection.style.display = "none";
        silverSection.style.display = "none";
      }
    }

    // Add event listener to membership type select
    membershipTypeSelect.addEventListener("change", toggleMembershipSections);

    // Trigger the function on page load to set the initial state
    toggleMembershipSections();
  });
</script>