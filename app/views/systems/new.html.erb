<h1 class="text-xl font-bold">Add New System</h1>
<%= form_with model: @system, local: true do |form| %>
  <div class="mb-4">
    <%= form.label :project_id, "Select Project", class: "block text-sm font-medium text-gray-700" %>
    <%= form.collection_select :project_id, @projects, :id, :name, { prompt: "Choose a Project" }, { id: "project-select", class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm", required: true } %>
  </div>

  <div class="mb-4">
    <%= form.label :project_scope_id, "Select Project Discipline", class: "block text-sm font-medium text-gray-700" %>
    <%= form.select :project_scope_id, [], { prompt: "Select a Project First" }, { id: "project-scope-select", class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm", disabled: true, required: true } %>
  </div>

  <div class="mb-4">
    <%= form.label :name, "System Name", class: "block text-sm font-medium text-gray-700" %>
    <%= form.text_field :name, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm", required: true %>
  </div>

  <div class="mt-4">
    <%= form.submit "Create System", class: "bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded" %>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const projectSelect = document.getElementById('project-select');
    const scopeSelect = document.getElementById('project-scope-select');

    if (!projectSelect || !scopeSelect) {
      console.error('Dropdown elements not found:', { projectSelect, scopeSelect });
      return;
    }

    projectSelect.addEventListener('change', function() {
      const projectId = this.value;
      console.log('Selected project ID:', projectId);

      if (projectId) {
        fetch(`/project_scopes.json?project_id=${projectId}`)
          .then(response => {
            console.log('Fetch response status:', response.status);
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            console.log('Project Disciplines data:', data);
            scopeSelect.innerHTML = '<option value="">Choose a Project Discipline</option>';
            if (data.length === 0) {
              scopeSelect.innerHTML = '<option value="">No Project Disciplines Available</option>';
              scopeSelect.disabled = true;
            } else {
              data.forEach(scope => {
                const option = document.createElement('option');
                option.value = scope.id;
                option.text = scope.name;
                scopeSelect.appendChild(option);
              });
              scopeSelect.disabled = false;
            }
          })
          .catch(error => {
            console.error('Error fetching Project Disciplines:', error);
            scopeSelect.innerHTML = '<option value="">Error loading Project Disciplines</option>';
            scopeSelect.disabled = true;
          });
      } else {
        scopeSelect.innerHTML = '<option value="">Select a Project First</option>';
        scopeSelect.disabled = true;
      }
    });
  });
</script>